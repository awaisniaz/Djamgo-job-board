# Generated by Django 4.0 on 2023-06-07 17:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-Mail-Adresse')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Username')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='aktives Konto')),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='letzte Anmeldung')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Beitrittsdatum')),
                ('first_name', models.CharField(max_length=55, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=55, verbose_name='Nachname')),
                ('password', models.CharField(max_length=500, verbose_name='Passwort')),
                ('profilepic', models.ImageField(blank=True, null=True, upload_to='profilepics/', verbose_name='Profilbild')),
                ('type', models.CharField(choices=[('admin', 'Admin'), ('student', 'Student'), ('teacher', 'Teacher'), ('staff', 'Staff')], max_length=20)),
                ('school', models.CharField(max_length=200)),
                ('section', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=40)),
                ('designation', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
    ]
